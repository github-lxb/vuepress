(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{421:function(t,s,a){t.exports=a.p+"assets/img/merge.3875945d.png"},447:function(t,s,a){"use strict";a.r(s);var r=a(2),e=Object(r.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("div",{staticClass:"custom-block theorem"},[s("p",{staticClass:"title"}),s("p",[t._v("Git作为我们日常开发代码的版本管理，现在主流的分支模式主要有两种:"),s("strong",[t._v("特性分支模式")]),t._v("("),s("code",[t._v("Git-Flow,Github-Flow,Gitlab-Flow")]),t._v(")和"),s("strong",[t._v("主干分支模式")]),t._v(",团队开发应根据实际情况选择适合的模式或者变体，不应拘泥于某一种开发模式，比如团队人员只有1-2人,版本发布频繁，就不要选择复杂的"),s("code",[t._v("Git-Flow")]),t._v(",反之团队人员有10人以上,采用主干模式会经常冲突，面临质量把控难等问题")])]),s("h2",{attrs:{id:"本地-远程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#本地-远程"}},[t._v("#")]),t._v(" 本地|远程")]),t._v(" "),s("p",[t._v("任何分支都可以有本地或者远程分支，并且可以"),s("strong",[t._v("单独存在")]),t._v("，你自己可以在本地创建无数的分支，做各种提交合并操作但不推送，但是对其他人来说这是不可见的")]),t._v(" "),s("h2",{attrs:{id:"主动合代码-分支合并"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#主动合代码-分支合并"}},[t._v("#")]),t._v(" 主动合代码(分支合并)")]),t._v(" "),s("p",[t._v("一个分支可以合并("),s("code",[t._v("merge")]),t._v(")到另一个分支\n一般来说,除了需要"),s("code",[t._v("merge quest")]),t._v("的保护分支，一般的分支我们在本地进行分支合并，本地合并完后讲合并之后的分支推送到远程分支，不要在远程进行合并操作")]),t._v(" "),s("h2",{attrs:{id:"被动合代码-拉取和推送"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#被动合代码-拉取和推送"}},[t._v("#")]),t._v(" 被动合代码(拉取和推送)")]),t._v(" "),s("p",[t._v("拉取代码和推送代码其实是同名分支的合并，实际开发中"),s("strong",[t._v("禁止非同名")]),t._v("的本地远程分支进行拉取和推送")]),t._v(" "),s("p",[s("img",{attrs:{src:a(421),alt:""}})]),t._v(" "),s("h2",{attrs:{id:"冲突的发生"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#冲突的发生"}},[t._v("#")]),t._v(" 冲突的发生")]),t._v(" "),s("p",[t._v("主动和被动合代码过程都有可能导致冲突发生")])])}),[],!1,null,null,null);s.default=e.exports}}]);